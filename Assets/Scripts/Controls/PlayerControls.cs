//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""Arthur"",
            ""id"": ""23dbd309-d5c5-450c-89d0-529866b1b452"",
            ""actions"": [
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""14dd20c3-0427-4610-8230-e91e51b64caf"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""a28c1063-c50b-464a-b7d9-7bfabf6975f6"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""7fced379-0c37-4fc9-8270-57442fd7b036"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Crouch"",
                    ""type"": ""Button"",
                    ""id"": ""9c6b27ed-9228-4b06-9d66-2126922f048d"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Start"",
                    ""type"": ""Button"",
                    ""id"": ""33b00ec9-259c-4398-a511-7c5d48bb9ee1"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""3cd68529-2e71-4943-8a7e-dbc2997b10d5"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6206a9f7-5e02-476d-bb23-5240803d79c2"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""31017fbf-433e-4c3c-a06c-636c61b7606c"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""5715ed23-8499-439c-bf39-d7f3b66134b0"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down"",
                    ""id"": ""f0f6fe32-6c4c-49dd-bcfa-84fa0b8c3fa4"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""c7e000dc-57dd-444a-863b-d793efe0ed98"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""4c85fadf-7eb9-4cdf-bcc8-9316439df033"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""1c83077f-53cb-4b4a-8bbb-ed2ca75b42f7"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dca51f36-9b17-4cfa-977f-cbcf7da841a9"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Start"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""56da0ec2-ba13-415b-a3b8-4c27acb8c294"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Start"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Cheats"",
            ""id"": ""7d1ceb5f-203d-4206-840e-cafdaea03dc1"",
            ""actions"": [
                {
                    ""name"": ""ToggleHealth"",
                    ""type"": ""Button"",
                    ""id"": ""d475d9f6-a203-4ea1-a8f1-e832cffd736c"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleEnemyDamage"",
                    ""type"": ""Button"",
                    ""id"": ""42569522-7826-477d-a0f8-82350cc16dde"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleState"",
                    ""type"": ""Button"",
                    ""id"": ""b4ab702f-0583-4c52-a254-ccf47164f16f"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ResetScore"",
                    ""type"": ""Button"",
                    ""id"": ""9758dc5f-10f7-4dd9-b1d4-2d29d3aff865"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""InfiniteLives"",
                    ""type"": ""Button"",
                    ""id"": ""9ce5d801-e42d-4217-8d61-fdc077b97faf"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DisappearEnemies"",
                    ""type"": ""Button"",
                    ""id"": ""450ccb92-9f66-4fa8-a72b-1d2db27aa53d"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ResetPosition"",
                    ""type"": ""Button"",
                    ""id"": ""f066c582-9fe9-4e45-8694-9c1e21204327"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleTime"",
                    ""type"": ""Button"",
                    ""id"": ""1833c8ec-c774-4280-b901-db13d8630abb"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""1419c72c-d2b1-430c-beac-862e3ad00c3b"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleHealth"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""999e8714-e17e-462c-a8db-95f45b01d6cb"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleHealth"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""ac4b536d-490a-4f6f-8906-7e11a0b00992"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleHealth"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""88bd376e-aeae-4ef5-bd4b-f24ee32588c1"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleEnemyDamage"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""a0394c98-0360-48ee-b4f6-83dd4ec62c55"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleEnemyDamage"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""de91c29e-5551-4bf2-9664-6a4f6d404ec9"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleEnemyDamage"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""16a2068f-1f86-4336-9656-ba025b0c6f61"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleState"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""880a5a99-cbf9-41cd-ad70-4bc2d5e35a9b"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleState"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""3ca54803-f5f4-4833-af85-a9f5c9bee3e2"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleState"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""576a4fa6-973b-4897-ae3a-8023c1fc2f0f"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ResetScore"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""09bc21a9-f049-4c11-966b-6b4e380d8337"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ResetScore"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""28cdac82-b1e6-4479-a1fd-cae9fceca61d"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ResetScore"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""c7503492-b406-4e23-bd87-54508b489ddd"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InfiniteLives"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""63330459-6c39-44b3-8b2d-696470ca648a"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InfiniteLives"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""75be2708-e3ac-4cb2-a9c7-29da87a3007a"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InfiniteLives"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""28b68605-aaf3-43c8-a063-c840ed0baf18"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DisappearEnemies"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""747a0495-9ed4-463a-9182-61886b38c054"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DisappearEnemies"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""5b0d6108-99a8-451f-a65e-a0d98f0e6f9f"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DisappearEnemies"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""ccccd927-4688-43fe-ac25-d55fee0c4db0"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ResetPosition"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""3fa67150-408c-4855-a1f4-c2b6c3bfbda4"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ResetPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""271c1fd7-82af-4731-99bb-c0779b51bd6c"",
                    ""path"": ""<Keyboard>/7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ResetPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""34250d4e-abfe-449d-a47d-3c67103861d7"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleTime"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""46cbc061-1f5d-42ac-adb6-8369fa75ebf1"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleTime"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""8a5deac1-8298-449d-b3c6-54887facd8d9"",
                    ""path"": ""<Keyboard>/8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleTime"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Arthur
        m_Arthur = asset.FindActionMap("Arthur", throwIfNotFound: true);
        m_Arthur_Attack = m_Arthur.FindAction("Attack", throwIfNotFound: true);
        m_Arthur_Jump = m_Arthur.FindAction("Jump", throwIfNotFound: true);
        m_Arthur_Move = m_Arthur.FindAction("Move", throwIfNotFound: true);
        m_Arthur_Crouch = m_Arthur.FindAction("Crouch", throwIfNotFound: true);
        m_Arthur_Start = m_Arthur.FindAction("Start", throwIfNotFound: true);
        // Cheats
        m_Cheats = asset.FindActionMap("Cheats", throwIfNotFound: true);
        m_Cheats_ToggleHealth = m_Cheats.FindAction("ToggleHealth", throwIfNotFound: true);
        m_Cheats_ToggleEnemyDamage = m_Cheats.FindAction("ToggleEnemyDamage", throwIfNotFound: true);
        m_Cheats_ToggleState = m_Cheats.FindAction("ToggleState", throwIfNotFound: true);
        m_Cheats_ResetScore = m_Cheats.FindAction("ResetScore", throwIfNotFound: true);
        m_Cheats_InfiniteLives = m_Cheats.FindAction("InfiniteLives", throwIfNotFound: true);
        m_Cheats_DisappearEnemies = m_Cheats.FindAction("DisappearEnemies", throwIfNotFound: true);
        m_Cheats_ResetPosition = m_Cheats.FindAction("ResetPosition", throwIfNotFound: true);
        m_Cheats_ToggleTime = m_Cheats.FindAction("ToggleTime", throwIfNotFound: true);
    }

    ~@PlayerControls()
    {
        UnityEngine.Debug.Assert(!m_Arthur.enabled, "This will cause a leak and performance issues, PlayerControls.Arthur.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_Cheats.enabled, "This will cause a leak and performance issues, PlayerControls.Cheats.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Arthur
    private readonly InputActionMap m_Arthur;
    private List<IArthurActions> m_ArthurActionsCallbackInterfaces = new List<IArthurActions>();
    private readonly InputAction m_Arthur_Attack;
    private readonly InputAction m_Arthur_Jump;
    private readonly InputAction m_Arthur_Move;
    private readonly InputAction m_Arthur_Crouch;
    private readonly InputAction m_Arthur_Start;
    public struct ArthurActions
    {
        private @PlayerControls m_Wrapper;
        public ArthurActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Attack => m_Wrapper.m_Arthur_Attack;
        public InputAction @Jump => m_Wrapper.m_Arthur_Jump;
        public InputAction @Move => m_Wrapper.m_Arthur_Move;
        public InputAction @Crouch => m_Wrapper.m_Arthur_Crouch;
        public InputAction @Start => m_Wrapper.m_Arthur_Start;
        public InputActionMap Get() { return m_Wrapper.m_Arthur; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ArthurActions set) { return set.Get(); }
        public void AddCallbacks(IArthurActions instance)
        {
            if (instance == null || m_Wrapper.m_ArthurActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_ArthurActionsCallbackInterfaces.Add(instance);
            @Attack.started += instance.OnAttack;
            @Attack.performed += instance.OnAttack;
            @Attack.canceled += instance.OnAttack;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Crouch.started += instance.OnCrouch;
            @Crouch.performed += instance.OnCrouch;
            @Crouch.canceled += instance.OnCrouch;
            @Start.started += instance.OnStart;
            @Start.performed += instance.OnStart;
            @Start.canceled += instance.OnStart;
        }

        private void UnregisterCallbacks(IArthurActions instance)
        {
            @Attack.started -= instance.OnAttack;
            @Attack.performed -= instance.OnAttack;
            @Attack.canceled -= instance.OnAttack;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Crouch.started -= instance.OnCrouch;
            @Crouch.performed -= instance.OnCrouch;
            @Crouch.canceled -= instance.OnCrouch;
            @Start.started -= instance.OnStart;
            @Start.performed -= instance.OnStart;
            @Start.canceled -= instance.OnStart;
        }

        public void RemoveCallbacks(IArthurActions instance)
        {
            if (m_Wrapper.m_ArthurActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IArthurActions instance)
        {
            foreach (var item in m_Wrapper.m_ArthurActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_ArthurActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public ArthurActions @Arthur => new ArthurActions(this);

    // Cheats
    private readonly InputActionMap m_Cheats;
    private List<ICheatsActions> m_CheatsActionsCallbackInterfaces = new List<ICheatsActions>();
    private readonly InputAction m_Cheats_ToggleHealth;
    private readonly InputAction m_Cheats_ToggleEnemyDamage;
    private readonly InputAction m_Cheats_ToggleState;
    private readonly InputAction m_Cheats_ResetScore;
    private readonly InputAction m_Cheats_InfiniteLives;
    private readonly InputAction m_Cheats_DisappearEnemies;
    private readonly InputAction m_Cheats_ResetPosition;
    private readonly InputAction m_Cheats_ToggleTime;
    public struct CheatsActions
    {
        private @PlayerControls m_Wrapper;
        public CheatsActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @ToggleHealth => m_Wrapper.m_Cheats_ToggleHealth;
        public InputAction @ToggleEnemyDamage => m_Wrapper.m_Cheats_ToggleEnemyDamage;
        public InputAction @ToggleState => m_Wrapper.m_Cheats_ToggleState;
        public InputAction @ResetScore => m_Wrapper.m_Cheats_ResetScore;
        public InputAction @InfiniteLives => m_Wrapper.m_Cheats_InfiniteLives;
        public InputAction @DisappearEnemies => m_Wrapper.m_Cheats_DisappearEnemies;
        public InputAction @ResetPosition => m_Wrapper.m_Cheats_ResetPosition;
        public InputAction @ToggleTime => m_Wrapper.m_Cheats_ToggleTime;
        public InputActionMap Get() { return m_Wrapper.m_Cheats; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CheatsActions set) { return set.Get(); }
        public void AddCallbacks(ICheatsActions instance)
        {
            if (instance == null || m_Wrapper.m_CheatsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_CheatsActionsCallbackInterfaces.Add(instance);
            @ToggleHealth.started += instance.OnToggleHealth;
            @ToggleHealth.performed += instance.OnToggleHealth;
            @ToggleHealth.canceled += instance.OnToggleHealth;
            @ToggleEnemyDamage.started += instance.OnToggleEnemyDamage;
            @ToggleEnemyDamage.performed += instance.OnToggleEnemyDamage;
            @ToggleEnemyDamage.canceled += instance.OnToggleEnemyDamage;
            @ToggleState.started += instance.OnToggleState;
            @ToggleState.performed += instance.OnToggleState;
            @ToggleState.canceled += instance.OnToggleState;
            @ResetScore.started += instance.OnResetScore;
            @ResetScore.performed += instance.OnResetScore;
            @ResetScore.canceled += instance.OnResetScore;
            @InfiniteLives.started += instance.OnInfiniteLives;
            @InfiniteLives.performed += instance.OnInfiniteLives;
            @InfiniteLives.canceled += instance.OnInfiniteLives;
            @DisappearEnemies.started += instance.OnDisappearEnemies;
            @DisappearEnemies.performed += instance.OnDisappearEnemies;
            @DisappearEnemies.canceled += instance.OnDisappearEnemies;
            @ResetPosition.started += instance.OnResetPosition;
            @ResetPosition.performed += instance.OnResetPosition;
            @ResetPosition.canceled += instance.OnResetPosition;
            @ToggleTime.started += instance.OnToggleTime;
            @ToggleTime.performed += instance.OnToggleTime;
            @ToggleTime.canceled += instance.OnToggleTime;
        }

        private void UnregisterCallbacks(ICheatsActions instance)
        {
            @ToggleHealth.started -= instance.OnToggleHealth;
            @ToggleHealth.performed -= instance.OnToggleHealth;
            @ToggleHealth.canceled -= instance.OnToggleHealth;
            @ToggleEnemyDamage.started -= instance.OnToggleEnemyDamage;
            @ToggleEnemyDamage.performed -= instance.OnToggleEnemyDamage;
            @ToggleEnemyDamage.canceled -= instance.OnToggleEnemyDamage;
            @ToggleState.started -= instance.OnToggleState;
            @ToggleState.performed -= instance.OnToggleState;
            @ToggleState.canceled -= instance.OnToggleState;
            @ResetScore.started -= instance.OnResetScore;
            @ResetScore.performed -= instance.OnResetScore;
            @ResetScore.canceled -= instance.OnResetScore;
            @InfiniteLives.started -= instance.OnInfiniteLives;
            @InfiniteLives.performed -= instance.OnInfiniteLives;
            @InfiniteLives.canceled -= instance.OnInfiniteLives;
            @DisappearEnemies.started -= instance.OnDisappearEnemies;
            @DisappearEnemies.performed -= instance.OnDisappearEnemies;
            @DisappearEnemies.canceled -= instance.OnDisappearEnemies;
            @ResetPosition.started -= instance.OnResetPosition;
            @ResetPosition.performed -= instance.OnResetPosition;
            @ResetPosition.canceled -= instance.OnResetPosition;
            @ToggleTime.started -= instance.OnToggleTime;
            @ToggleTime.performed -= instance.OnToggleTime;
            @ToggleTime.canceled -= instance.OnToggleTime;
        }

        public void RemoveCallbacks(ICheatsActions instance)
        {
            if (m_Wrapper.m_CheatsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ICheatsActions instance)
        {
            foreach (var item in m_Wrapper.m_CheatsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_CheatsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public CheatsActions @Cheats => new CheatsActions(this);
    public interface IArthurActions
    {
        void OnAttack(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
        void OnCrouch(InputAction.CallbackContext context);
        void OnStart(InputAction.CallbackContext context);
    }
    public interface ICheatsActions
    {
        void OnToggleHealth(InputAction.CallbackContext context);
        void OnToggleEnemyDamage(InputAction.CallbackContext context);
        void OnToggleState(InputAction.CallbackContext context);
        void OnResetScore(InputAction.CallbackContext context);
        void OnInfiniteLives(InputAction.CallbackContext context);
        void OnDisappearEnemies(InputAction.CallbackContext context);
        void OnResetPosition(InputAction.CallbackContext context);
        void OnToggleTime(InputAction.CallbackContext context);
    }
}
